Test ``2-matrix_divided`` module
=========================

Using ``matrix_divided``
=========================

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

Import
======

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Correct cases:
======

    >>> matrix = [ 
    ...     [1, 2, 3], 
    ...     [4, 5, 6] 
    ... ]


    >>> matrix_divided(matrix, 4)
    [[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]

    >>> matrix_divided([[2, 4], [8, 10]], -2)
    [[-1.0, -2.0], [-4.0, -5.0]]

    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix = [[1, 2, 3]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0]]

    >>> matrix = [ 
    ...     [1, 2, 3], 
    ...     [4, 5, 6],
    ...     [7, 8, 9] 
    ... ]

    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

Error cases:
======
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided(matrix, "holberton")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix = [ 
    ...     [1, 2, 3], 
    ...     [4, 5, 'holbie'] 
    ... ]   

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [ 
    ...     [1, 2, 3], 
    ...     [4, 5, 6, 7, 8] 
    ... ]

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(None, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    >>> matrix_divided(None, None)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
